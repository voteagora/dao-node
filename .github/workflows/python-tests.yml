name: Python Unit Tests

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"  # or your preferred Python version

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install pytest

      - name: Run pytest
        id: pytest
        run: |
          pytest --maxfail=1 --disable-warnings -v

      # (Optional) You can upload test results or coverage reports here
      # - name: Upload test results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: test-results
      #     path: path/to/test/results

      - name: Comment on the PR with test status
        # always() ensures that this step runs whether tests pass or fail
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            // Determine if tests passed or failed
            const testOutcome = "${{ steps.pytest.outcome }}";

            let commentBody;
            if (testOutcome === "success") {
              commentBody = "All tests passed! ✅";
            } else {
              commentBody = "Some tests have failed. ❌ Please check the logs for details. ```${{ steps.pytest.outputs.stdout }}```";
            }
            
            // Create a comment on the PR
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            })
